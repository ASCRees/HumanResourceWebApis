@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<HumanResourceWebApis.Models.VwEmployeeViewModel>

@{
    ViewBag.Title = "Index";
}

<p />
<p>
    <a href="@Url.Action("AddOrEdit","Employee")" class="btn btn-default"><i class="fa fa-plus"></i> Create New</a>
</p>

<div class="Row">
    <div style="float: left;">
        <label style="color: black; margin-top: 3px; margin-right: 5px; font-size: large;">Total results per page</label>
    </div>
    <div style="float: left;">
        <input type="number" min="2" max="20" value="@ViewBag.itemsperpage" id="ResultsPerPage" style="color: black; margin-top: 2px; margin-right: 5px;" />
    </div>
    <div style="float: left;">
        <input type="button" value="Refresh Page" onclick="CallFilterChange($('#ResultsPerPage').val(), $('#Status').val(),$('#Department').val())" class="btn button" style=" padding: 5px;" />
    </div>
</div>

<table class="table table-striped">
    <thead class="table-heading">
        <tr>
            <th>First Name</th>
            <th><a href="">Surname</a></th>
            <th>Email</th>
            <th>Date of Birth</th>
            <th>Department</th>
            <th>Status</th>
            <th>Employee Number</th>
            <th colspan="2">Actions</th>
        </tr>
        <tr>

            <th colspan="4" />
            <th>
                @Html.DropDownList("Departments", ViewBag.departmentsList as SelectList, new { @class = "form-control", @onchange = "CallFilterChange($('#ResultsPerPage').val(),$('#Status').val(),this.value)" })
            </th>
            <th>
                @Html.DropDownList("Status", ViewBag.statusList as SelectList, new { @class = "form-control", @onchange = "CallFilterChange($('#ResultsPerPage').val(),this.value, $('#Departments').val())" })
            </th>
            <th colspan="3" />
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        <tr>

            <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
            <td>@Html.DisplayFor(modelItem => item.SurName)</td>
            <td>@Html.DisplayFor(modelItem => item.Email)</td>
            <td>@Html.DisplayFor(modelItem => item.DateOfBirth)</td>
            <td>@Html.DisplayFor(modelItem => item.DepartmentName)</td>
            <td>@Html.DisplayFor(modelItem => item.StatusName)</td>
            <td>@Html.DisplayFor(modelItem => item.EmployeeNumber)</td>
            <td>
                <a href="@Url.Action("AddOrEdit","Employee",new {id=item.EmployeeId})" class="btn btn-default"><i class="fa fa-pencil"></i> Edit</a>
            </td>
            <td>
                <a onclick="Delete(@item.EmployeeId)" class="btn btn-default"><i class="fa fa-trash"></i> Delete</a>
            </td>
        </tr>
    }
</table>

<div></div>
    Page @(Model.PageCount < Model.PageNumber ? 0: Model.PageNumber)/@Model.PageCount
    <div>
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page, status = ViewBag.status, department = ViewBag.department }))
    </div>

    @section scripts {
        <script>
        $(function () {
            var successMessage = '@TempData["SuccessMessage"]'
            if (successMessage != '') {
                alertify.success(successMessage);
            }
        });

        function Delete(id) {
            alertify.confirm('Delete Employee', 'Are you sure you want to delete this employee?', function () {
                window.location.href = '@Url.Action("Delete","Employee")/' + id;
            },null);
        }

        function SortData()

        function CallFilterChange(itemsperpage,status,department) {
            console.log(status);
            console.log(department);

            window.location.href = `@Url.Action("Index","Employee")?page=1&itemsperpage=${itemsperpage}&status=${status}&department=${department}`;
        };

        function CallDepartmentChange(id) {
            console.log(id);
        };
        </script>
    }